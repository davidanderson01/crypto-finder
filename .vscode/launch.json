{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "command": "npm start",
            "name": "Run npm start",
            "request": "launch",
            "type": "node-terminal"
        },
        {
            "args": [
                "-u",
                "tdd",
                "--timeout",
                "999999",
                "--colors",
                "${workspaceFolder}/test"
            ],
            "internalConsoleOptions": "openOnSessionStart",
            "name": "Mocha Tests",
            "program": "mocha",
            "request": "launch",
            "skipFiles": [
                "<node_internals>/**"
            ],
            "type": "node"
        },
        {
            "args": [
                "generator"
            ],
            "console": "integratedTerminal",
            "internalConsoleOptions": "neverOpen",
            "name": "Yeoman generator",
            "program": "${workspaceFolder}/node_modules/yo/lib/cli.js",
            "request": "launch",
            "skipFiles": [
                "<node_internals>/**"
            ],
            "type": "node"
        },

        # Crypto Finder

    Crypto Finder is a powerful crypto-miner application that efficiently locates cryptocurrency nodes and deposits the earnings directly into your CashApp or other crypto wallets securely using SSL/TLS or other cryptographic methods.
    
    ## Features
    - **Automated Mining**: Finds and mines cryptocurrency nodes automatically.
    - **Secure Transactions**: Deposits earnings into your CashApp or other crypto wallets using SSL/TLS.
    - **High Efficiency**: Optimized to maximize mining performance.
    - **User-Friendly**: Easy to set up and use.
    
    ## Installation
    
    1. Clone the repository:
        ```sh
        git clone https: //github.com/davidanderson01/crypto-finder.git
        ```
    
    2. Navigate to the project directory:
        ```sh
        cd crypto-finder
        ```
    
    3. Install dependencies:
        ```sh
        npm install
        ```
    
    4. Run the application:
        ```sh
        npm start
        ```
    
    ## Usage
    
    1. Configure your wallet details in the `config.json` file.
    2. Start the application and let it do the mining for you.
    3. Monitor your earnings in your chosen wallet.
    
    ## Example Code
    
    ```javascript
    const crypto = require('crypto');
    const sslOptions = {
        key: fs.readFileSync('path/to/key.pem'),
        cert: fs.readFileSync('path/to/cert.pem'),
        };
    
    function findAndMineNodes(walletAddress) {
            // Simulate finding nodes and mining
        console.log('Mining initiated...');
        // Secure connection setup using SSL/TLS
        const secureConnection = crypto.createServer(sslOptions, (req, res) => {
                // Your mining logic here
            });
        secureConnection.listen(443, () => {
            console.log('Secure connection established. Depositing earnings...');
            // Simulate depositing earnings
            depositEarnings(bc1q3fxt0txx0navxvns0mk8-tunnk0wx704a8z7ggl);
            });
        }
    
    function depositEarnings(walletAddress) {
            // Simulate earnings deposit
        console.log(`Earnings deposited to wallet: ${bc1q3fxt0txx0navxvns0mk8-tunnk0wx704a8z7ggl
            }`);
        }
        // Example usage
    findAndMineNodes('bc1q3fxt0txx0navxvns0mk8-tunnk0wx704a8z7ggl');
    

        {
            "name": "Attach to Edge",
            "port": 9222,
            "request": "attach",
            "type": "msedge",
            "webRoot": "${elevatecraft}"
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Launch Program",
            "skipFiles": [
                "<node_internals>/**"
            ],
            "program": "${file}"
        }
    ]
}